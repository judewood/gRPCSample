// @generated by protobuf-ts 2.9.4
// @generated from protobuf file "blog.proto" (package "blog", syntax proto3)
// tslint:disable
import type { RpcTransport } from "@protobuf-ts/runtime-rpc";
import type { ServiceInfo } from "@protobuf-ts/runtime-rpc";
import { BlogService } from "./blog";
import type { CurrentTime } from "./blog";
import type { InitiateCurrentTime } from "./blog";
import type { ServerStreamingCall } from "@protobuf-ts/runtime-rpc";
import type { Empty } from "../google/protobuf/empty";
import { stackIntercept } from "@protobuf-ts/runtime-rpc";
import type { BlogId } from "./blog";
import type { Blog } from "./blog";
import type { UnaryCall } from "@protobuf-ts/runtime-rpc";
import type { RpcOptions } from "@protobuf-ts/runtime-rpc";
/**
 * @generated from protobuf service blog.BlogService
 */
export interface IBlogServiceClient {
    /**
     * @generated from protobuf rpc: CreateBlog(blog.Blog) returns (blog.BlogId);
     */
    createBlog(input: Blog, options?: RpcOptions): UnaryCall<Blog, BlogId>;
    /**
     * @generated from protobuf rpc: GetBlog(blog.BlogId) returns (blog.Blog);
     */
    getBlog(input: BlogId, options?: RpcOptions): UnaryCall<BlogId, Blog>;
    /**
     * @generated from protobuf rpc: UpdateBlog(blog.Blog) returns (google.protobuf.Empty);
     */
    updateBlog(input: Blog, options?: RpcOptions): UnaryCall<Blog, Empty>;
    /**
     * @generated from protobuf rpc: DeleteBlog(blog.BlogId) returns (google.protobuf.Empty);
     */
    deleteBlog(input: BlogId, options?: RpcOptions): UnaryCall<BlogId, Empty>;
    /**
     * @generated from protobuf rpc: ListBlog(google.protobuf.Empty) returns (stream blog.Blog);
     */
    listBlog(input: Empty, options?: RpcOptions): ServerStreamingCall<Empty, Blog>;
    /**
     * @generated from protobuf rpc: SendCurrentTime(blog.InitiateCurrentTime) returns (stream blog.CurrentTime);
     */
    sendCurrentTime(input: InitiateCurrentTime, options?: RpcOptions): ServerStreamingCall<InitiateCurrentTime, CurrentTime>;
    /**
     * @generated from protobuf rpc: SendTimeOne(blog.InitiateCurrentTime) returns (blog.CurrentTime);
     */
    sendTimeOne(input: InitiateCurrentTime, options?: RpcOptions): UnaryCall<InitiateCurrentTime, CurrentTime>;
}
/**
 * @generated from protobuf service blog.BlogService
 */
export class BlogServiceClient implements IBlogServiceClient, ServiceInfo {
    typeName = BlogService.typeName;
    methods = BlogService.methods;
    options = BlogService.options;
    constructor(private readonly _transport: RpcTransport) {
    }
    /**
     * @generated from protobuf rpc: CreateBlog(blog.Blog) returns (blog.BlogId);
     */
    createBlog(input: Blog, options?: RpcOptions): UnaryCall<Blog, BlogId> {
        const method = this.methods[0], opt = this._transport.mergeOptions(options);
        return stackIntercept<Blog, BlogId>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: GetBlog(blog.BlogId) returns (blog.Blog);
     */
    getBlog(input: BlogId, options?: RpcOptions): UnaryCall<BlogId, Blog> {
        const method = this.methods[1], opt = this._transport.mergeOptions(options);
        return stackIntercept<BlogId, Blog>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: UpdateBlog(blog.Blog) returns (google.protobuf.Empty);
     */
    updateBlog(input: Blog, options?: RpcOptions): UnaryCall<Blog, Empty> {
        const method = this.methods[2], opt = this._transport.mergeOptions(options);
        return stackIntercept<Blog, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: DeleteBlog(blog.BlogId) returns (google.protobuf.Empty);
     */
    deleteBlog(input: BlogId, options?: RpcOptions): UnaryCall<BlogId, Empty> {
        const method = this.methods[3], opt = this._transport.mergeOptions(options);
        return stackIntercept<BlogId, Empty>("unary", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: ListBlog(google.protobuf.Empty) returns (stream blog.Blog);
     */
    listBlog(input: Empty, options?: RpcOptions): ServerStreamingCall<Empty, Blog> {
        const method = this.methods[4], opt = this._transport.mergeOptions(options);
        return stackIntercept<Empty, Blog>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SendCurrentTime(blog.InitiateCurrentTime) returns (stream blog.CurrentTime);
     */
    sendCurrentTime(input: InitiateCurrentTime, options?: RpcOptions): ServerStreamingCall<InitiateCurrentTime, CurrentTime> {
        const method = this.methods[5], opt = this._transport.mergeOptions(options);
        return stackIntercept<InitiateCurrentTime, CurrentTime>("serverStreaming", this._transport, method, opt, input);
    }
    /**
     * @generated from protobuf rpc: SendTimeOne(blog.InitiateCurrentTime) returns (blog.CurrentTime);
     */
    sendTimeOne(input: InitiateCurrentTime, options?: RpcOptions): UnaryCall<InitiateCurrentTime, CurrentTime> {
        const method = this.methods[6], opt = this._transport.mergeOptions(options);
        return stackIntercept<InitiateCurrentTime, CurrentTime>("unary", this._transport, method, opt, input);
    }
}
